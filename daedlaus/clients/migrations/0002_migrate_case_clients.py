# Generated by Django 5.1.7 on 2025-03-21 00:06

from django.db import migrations

def migrate_case_clients(apps, schema_editor):
    """Create Client records for existing cases and update foreign keys"""
    Case = apps.get_model('cases', 'Case')
    Client = apps.get_model('clients', 'Client')
    User = apps.get_model('users', 'User')
    
    # Get the first superuser for created_by field
    admin_user = User.objects.filter(is_superuser=True).first()
    if not admin_user:
        # Fallback to first user if no superuser exists
        admin_user = User.objects.first()
    
    # Process all cases that have client_name but no client foreign key
    for case in Case.objects.filter(client__isnull=True).exclude(client_name=''):
        # Create client record
        client = Client(
            name=case.client_name,
            email=case.client_email,
            phone=case.client_phone,
            client_type='individual',  # Default to individual
            created_by=admin_user,
            updated_by=admin_user
        )
        client.save()
        
        # Update case with client foreign key
        case.client = client
        case.save()

def reverse_migrate_case_clients(apps, schema_editor):
    """Reverse migration - restore client fields from related Client objects"""
    Case = apps.get_model('cases', 'Case')
    
    for case in Case.objects.filter(client__isnull=False):
        # Copy data from client back to case fields
        case.client_name = case.client.name
        case.client_email = case.client.email
        case.client_phone = case.client.phone
        case.save()

class Migration(migrations.Migration):
    dependencies = [
        ('clients', '0001_initial'),
        ('cases', '0002_case_client'),
    ]

    operations = [
        migrations.RunPython(migrate_case_clients, reverse_migrate_case_clients),
    ]