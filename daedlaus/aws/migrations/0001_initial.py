# Generated by Django 5.1.7 on 2025-03-19 02:51

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="BedrockConfiguration",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text="A friendly name to identify this configuration",
                        max_length=100,
                    ),
                ),
                (
                    "aws_access_key_id",
                    models.CharField(help_text="AWS Access Key ID", max_length=255),
                ),
                (
                    "aws_secret_access_key",
                    models.CharField(
                        help_text="AWS Secret Access Key - will be stored encrypted",
                        max_length=255,
                    ),
                ),
                (
                    "region",
                    models.CharField(
                        choices=[
                            ("us-east-1", "US East (N. Virginia)"),
                            ("us-east-2", "US East (Ohio)"),
                            ("us-west-1", "US West (N. California)"),
                            ("us-west-2", "US West (Oregon)"),
                            ("af-south-1", "Africa (Cape Town)"),
                            ("ap-east-1", "Asia Pacific (Hong Kong)"),
                            ("ap-south-1", "Asia Pacific (Mumbai)"),
                            ("ap-northeast-1", "Asia Pacific (Tokyo)"),
                            ("ap-northeast-2", "Asia Pacific (Seoul)"),
                            ("ap-northeast-3", "Asia Pacific (Osaka)"),
                            ("ap-southeast-1", "Asia Pacific (Singapore)"),
                            ("ap-southeast-2", "Asia Pacific (Sydney)"),
                            ("ca-central-1", "Canada (Central)"),
                            ("eu-central-1", "Europe (Frankfurt)"),
                            ("eu-west-1", "Europe (Ireland)"),
                            ("eu-west-2", "Europe (London)"),
                            ("eu-west-3", "Europe (Paris)"),
                            ("eu-north-1", "Europe (Stockholm)"),
                            ("eu-south-1", "Europe (Milan)"),
                            ("me-south-1", "Middle East (Bahrain)"),
                            ("sa-east-1", "South America (São Paulo)"),
                        ],
                        default="us-east-2",
                        help_text="AWS Region for this service",
                        max_length=20,
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Whether this configuration is currently active",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "default_model_id",
                    models.CharField(
                        default="anthropic.claude-3-sonnet-20240229-v1:0",
                        help_text="Default model ID to use",
                        max_length=255,
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "updated_by",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_updated",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Bedrock Configuration",
                "verbose_name_plural": "Bedrock Configurations",
            },
        ),
        migrations.CreateModel(
            name="S3Configuration",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text="A friendly name to identify this configuration",
                        max_length=100,
                    ),
                ),
                (
                    "aws_access_key_id",
                    models.CharField(help_text="AWS Access Key ID", max_length=255),
                ),
                (
                    "aws_secret_access_key",
                    models.CharField(
                        help_text="AWS Secret Access Key - will be stored encrypted",
                        max_length=255,
                    ),
                ),
                (
                    "region",
                    models.CharField(
                        choices=[
                            ("us-east-1", "US East (N. Virginia)"),
                            ("us-east-2", "US East (Ohio)"),
                            ("us-west-1", "US West (N. California)"),
                            ("us-west-2", "US West (Oregon)"),
                            ("af-south-1", "Africa (Cape Town)"),
                            ("ap-east-1", "Asia Pacific (Hong Kong)"),
                            ("ap-south-1", "Asia Pacific (Mumbai)"),
                            ("ap-northeast-1", "Asia Pacific (Tokyo)"),
                            ("ap-northeast-2", "Asia Pacific (Seoul)"),
                            ("ap-northeast-3", "Asia Pacific (Osaka)"),
                            ("ap-southeast-1", "Asia Pacific (Singapore)"),
                            ("ap-southeast-2", "Asia Pacific (Sydney)"),
                            ("ca-central-1", "Canada (Central)"),
                            ("eu-central-1", "Europe (Frankfurt)"),
                            ("eu-west-1", "Europe (Ireland)"),
                            ("eu-west-2", "Europe (London)"),
                            ("eu-west-3", "Europe (Paris)"),
                            ("eu-north-1", "Europe (Stockholm)"),
                            ("eu-south-1", "Europe (Milan)"),
                            ("me-south-1", "Middle East (Bahrain)"),
                            ("sa-east-1", "South America (São Paulo)"),
                        ],
                        default="us-east-2",
                        help_text="AWS Region for this service",
                        max_length=20,
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Whether this configuration is currently active",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "bucket_name",
                    models.CharField(help_text="S3 Bucket Name", max_length=255),
                ),
                (
                    "use_for_static_files",
                    models.BooleanField(
                        default=False,
                        help_text="Use this bucket for serving static files",
                    ),
                ),
                (
                    "use_for_media_files",
                    models.BooleanField(
                        default=False,
                        help_text="Use this bucket for storing media files",
                    ),
                ),
                (
                    "create_bucket_if_not_exists",
                    models.BooleanField(
                        default=False, help_text="Create the bucket if it doesn't exist"
                    ),
                ),
                (
                    "custom_domain",
                    models.CharField(
                        blank=True,
                        help_text="Optional custom domain for the bucket (e.g., cdn.example.com)",
                        max_length=255,
                        null=True,
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "updated_by",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_updated",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "S3 Configuration",
                "verbose_name_plural": "S3 Configurations",
            },
        ),
    ]
